name: Deploy API JAR

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: ${{ vars.AWS_DEPLOY_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
          

      - name: Run Tests
        run: |
          echo Testing

      - name: Build Backend API JAR
        run: |
          chmod +x ./gradlew
          ./gradlew :backend:build
          

      - name: Get secrets from AWS Secrets Manager
        uses: aws-actions/aws-secretsmanager-get-secrets@v2.0.1
        with:
          secret-ids: | 
            SM, ${{ vars.AWS_SECRET_NAME_API }}
            SMDB, ${{ vars.AWS_SECRET_NAME_DB }}
          parse-json-secrets: true

      - name: Fetch Parameter from AWS Parameter Store
        run: |
            {
              echo 'EC2_SSH_PRIVATE_KEY<<EOF'
              aws ssm get-parameter --name '${{ env.SM_KEYID }}' --with-decryption --query 'Parameter.Value' --output text
              echo EOF
            } >> "$GITHUB_ENV"

      - name: Stop Old Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SM_INSTANCEIP }}
          username: "ec2-user"
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: ~/nuke.sh

      - name: Copy JAR to EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.SM_INSTANCEIP }}
          username: "ec2-user"
          key: ${{ env.EC2_SSH_PRIVATE_KEY}}
          port: 22
          source: "backend/build/libs/*.jar"
          target: "~/API/"
          strip_components: 3

      - name: Start new server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SM_INSTANCEIP }}
          username: "ec2-user"
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            export DATABASE_URL="jdbc:postgresql://${{ env.SMDB_HOST }}:${{ env.SMDB_PORT }}/test"
            export DATABASE_USERNAME="${{ env.SMDB_USERNAME }}"
            export DATABASE_PASSWORD="${{ env.SMDB_PASSWORD }}"
            nohup java -jar ~/API/*.jar > ~/API/app.log 2>&1 & 